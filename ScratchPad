let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve WVDConnections data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        "
        let paramRangeStart = todatetime('" & DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss") & "');
        let paramRangeEnd = todatetime('" & DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss") & "');
        
        WVDConnections
        | where TimeGenerated between (paramRangeStart .. paramRangeEnd)
        | where State == ""Started""
        | project CorrelationId, UserName, ConnectionType, StartTime = TimeGenerated, _ResourceId
        | join (
            WVDConnections
            | where State == ""Connected""
            | project EndTime = TimeGenerated, CorrelationId, PredecessorConnectionId, SessionHostName
        ) on CorrelationId
        | extend LoginDurationSeconds = round((EndTime - StartTime) / 1s, 2) // Convert Duration to seconds and round to 2 decimal places
        | project CorrelationId, UserName, ConnectionType, StartTime, EndTime, _ResourceId, PredecessorConnectionId, SessionHostName, LoginDurationSeconds
        | join kind=leftouter (
            WVDCheckpoints
            | where Parameters contains ""StartVMOnConnect"" and Parameters contains ""VMStarting""
            | project CorrelationId, Parameters
        ) on CorrelationId
        | extend 
            HostPoolName = extract(@""/([^/]+)$"", 1, _ResourceId), // Extract the string after the last `/` in `_ResourceId`
            LoginType = case(
                isnotempty(Parameters), ""StartVMOnConnect"",
                PredecessorConnectionId != ""<>"", ""Reconnect"",
                isempty(Parameters) and PredecessorConnectionId == ""<>"", ""Standard"",
                ""Unknown"" // Default case
            )
        | extend StartTimekey = format_datetime(StartTime, 'HHmm')
        | extend ConnectedTimekey = format_datetime(EndTime, 'HHmm')
        | extend UserName = trim(' ', tolower(UserName))
        | extend SessionHostName = trim(' ', tolower(SessionHostName))
        | project CorrelationId, StartTimeGenerated = StartTime, StartTimekey, ConnectedTimeGenerated = EndTime, ConnectedTimekey, LoginDurationSeconds, UserName, HostPoolName, SessionHostName, LoginType
        ",
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source








let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve WVDConnections data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        "
        let paramRangeStart = todatetime('" & DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss") & "');
        let paramRangeEnd = todatetime('" & DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss") & "');
        
        WVDConnections
            | where TimeGenerated between (paramRangeStart .. paramRangeEnd)
            | extend UserName = trim("" "", tolower(UserName))
            | where State == ""Connected""
            | project CorrelationId, UserName, ResourceAlias, StartDate = TimeGenerated
            | join (
                WVDConnections
                | where State == ""Completed""
                | project EndDate = TimeGenerated, CorrelationId
            ) on CorrelationId
            | extend StartTimekey = format_datetime(StartDate, 'HHmm')
            | extend EndTimekey = format_datetime(EndDate, 'HHmm')
            | project CorrelationId, StartDate, StartTimekey, EndDate, EndTimekey, UserName, DurationSeconds = (EndDate - StartDate) / 1s
            | summarize arg_max(StartDate, *) by CorrelationId
        ",
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source


Can you replace the KQL in the M Query above with the KQL Query below

let paramRangeStart = todatetime('" & DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss") & "')
let paramRangeEnd = todatetime('" & DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss") & "')

WVDConnections
| where TimeGenerated between (paramRangeStart .. paramRangeEnd)
| where State == "Started"
| project CorrelationId, UserName, ConnectionType, StartTime = TimeGenerated, _ResourceId
| join (
    WVDConnections
    | where State == "Connected"
    | project EndTime = TimeGenerated, CorrelationId, PredecessorConnectionId, SessionHostName
) on CorrelationId
| extend LoginDurationSeconds = round((EndTime - StartTime) / 1s, 2) // Convert Duration to seconds and round to 2 decimal places
| project CorrelationId, UserName, ConnectionType, StartTime, EndTime, _ResourceId, PredecessorConnectionId, SessionHostName, LoginDurationSeconds
| join kind=leftouter (
    WVDCheckpoints
    | where Parameters contains "StartVMOnConnect" and Parameters contains "VMStarting"
    | project CorrelationId, Parameters
) on CorrelationId
| extend 
    HostPoolName = extract(@"/([^/]+)$", 1, _ResourceId), // Extract the string after the last `/` in `_ResourceId`
    LoginType = case(
        isnotempty(Parameters), "StartVMOnConnect",
        PredecessorConnectionId != "<>", "Reconnect",
        isempty(Parameters) and PredecessorConnectionId == "<>", "Standard",
        "Unknown" // Default case
    )
| extend StartTimekey = format_datetime(StartTime, 'HHmm')
| extend ConnectedTimekey = format_datetime(EndTime, 'HHmm')
| extend UserName = trim(' ', tolower(UserName))
| extend SessionHostName = trim(' ', tolower(SessionHostName))
| project CorrelationId, StartTimeGenerated = StartTime, StartTimekey, ConnectedTimeGenerated = EndTime, ConnectedTimekey, LoginDurationSeconds, UserName, HostPoolName, SessionHostName, LoginType
