let
    Source = AzureDataExplorer.Contents(LAWClusterURLAVD, LAWNameAVD, "WVDConnections#(lf)| where TimeGenerated >= ago(30d)#(lf)| where State in (""Connected"")#(lf)| extend Protocol = iff(UdpUse in (""0"", ""<>""), ""TCP"", ""UDP"")#(lf)| extend ClientType = iff(#(lf)    ClientType == ""com.microsoft.rdc.windows.msrdc.x64"", ""Win RD x64 (MSI)"",#(lf)    iff(ClientType == ""com.igel.rdc.linux"", ""IGEL"",#(lf)    iff(ClientType == ""com.microsoft.rdc.windows.store"", ""Win RD Store"",#(lf)    iff(ClientType == ""com.microsoft.rdc.html"", ""Web Browser (HTML5)"",#(lf)    iff(ClientType == ""com.microsoft.rdc.macos"", ""MAC OS"",#(lf)    iff(ClientType == ""com.microsoft.rdc.windows.msrdc.arm64"", ""Win RD ARM 64 (MSI)"",#(lf)    iff(ClientType == ""com.microsoft.rdc.ios"", ""iOS"",#(lf)    iff(ClientType == ""com.microsoft.rdc.windows.msrdc.msix.x64"", ""Win RD x64 (MSIX)"",#(lf)    iff(ClientType == ""com.microsoft.rdc.windows.wa.msrdc.msix.arm64"", ""Win App x64 (MSIX)"", ""Other"")))))))))#(lf)| extend Date = format_datetime(TimeGenerated, 'yyyy-MM-dd')  // Adds Date column#(lf)| extend Time = format_datetime(TimeGenerated, 'HH:mm:ss:fff')       // Adds Time column#(lf)| extend TimeKey = replace("":"", """", Time)", [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Date", type date}}),
    #"4-fn_ConvertIP4toNumeric" = Table.AddColumn(#"Changed Type", "ClientSideIPAddress-Numeric", each #"4-fn_ConvertIP4toNumeric"([ClientSideIPAddress]))
in
    #"4-fn_ConvertIP4toNumeric"



let
    // Source query from Azure Data Explorer
    Source = AzureDataExplorer.Contents(
        LAWClusterURLAVD, 
        LAWNameAVD, 
        "WVDConnections" &
        "#(lf)| where TimeGenerated >= ago(30d)" &
        "#(lf)| where State in (""Connected"")" &
        "#(lf)| extend Protocol = iff(UdpUse in (""0"", ""<>""), ""TCP"", ""UDP"")" &
        "#(lf)| extend ClientType = iff(" &
        "ClientType == ""com.microsoft.rdc.windows.msrdc.x64"", ""Win RD x64 (MSI)""," &
        "iff(ClientType == ""com.igel.rdc.linux"", ""IGEL""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.store"", ""Win RD Store""," &
        "iff(ClientType == ""com.microsoft.rdc.html"", ""Web Browser (HTML5)""," &
        "iff(ClientType == ""com.microsoft.rdc.macos"", ""MAC OS""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.msrdc.arm64"", ""Win RD ARM 64 (MSI)""," &
        "iff(ClientType == ""com.microsoft.rdc.ios"", ""iOS""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.msrdc.msix.x64"", ""Win RD x64 (MSIX)""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.wa.msrdc.msix.arm64"", ""Win App x64 (MSIX)"", ""Other""))))))))))" &
        "#(lf)| extend Date = format_datetime(TimeGenerated, 'yyyy-MM-dd')" &
        "#(lf)| extend Time = format_datetime(TimeGenerated, 'HH:mm:ss:fff')" &
        "#(lf)| extend TimeKey = replace("":"", """", Time)", 
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    ),

    // Change the Date column type to date
    #"Changed Type" = Table.TransformColumnTypes(Source, {{"Date", type date}}),

    // Add a new column converting ClientSideIPAddress to numeric format
    #"4-fn_ConvertIP4toNumeric" = Table.AddColumn(
        #"Changed Type", 
        "ClientSideIPAddress-Numeric", 
        each #"4-fn_ConvertIP4toNumeric"([ClientSideIPAddress])
    )
in
    #"4-fn_ConvertIP4toNumeric"

Bad request: failed to query Draft resource name: nmw-app-law-fwjv4wn75m4qg, resource id: ce4e1e84-3765-4cfe-ac40-5de8d7633df4; (inner error: {"code":"Bad Request","message":"{\"error\":{\"message\":\"The request had some invalid properties\",\"code\":\"BadArgumentError\",\"correlationId\":\"3c91bc27-bab6-46f0-a0cc-e69ac2bcfa26\",\"innererror\":{\"code\":\"SyntaxError\",\"message\":\"A recognition error occurred in the query.\",\"innererror\":{\"code\":\"SYN0002\",\"message\":\"Query could not be parsed at ')' on line [5,651]\",\"line\":5,\"pos\":651,\"token\":\")\"}}}}"})
Details:
    Error=failed to query Draft resource name: nmw-app-law-fwjv4wn75m4qg, resource id: ce4e1e84-3765-4cfe-ac40-5de8d7633df4; (inner error: {"code":"Bad Request","message":"{\"error\":{\"message\":\"The request had some invalid properties\",\"code\":\"BadArgumentError\",\"correlationId\":\"3c91bc27-bab6-46f0-a0cc-e69ac2bcfa26\",\"innererror\":{\"code\":\"SyntaxError\",\"message\":\"A recognition error occurred in the query.\",\"innererror\":{\"code\":\"SYN0002\",\"message\":\"Query could not be parsed at ')' on line [5,651]\",\"line\":5,\"pos\":651,\"token\":\")\"}}}}"})
    Code=FailedToQueryDraft

let
    // Source query from Azure Data Explorer
    Source = AzureDataExplorer.Contents(
        LAWClusterURLAVD, 
        LAWNameAVD, 
        "WVDConnections" &
        "#(lf)| where TimeGenerated >= ago(30d)" &
        "#(lf)| where State in (""Connected"")" &
        "#(lf)| extend Protocol = iff(UdpUse in (""0"", ""<>""), ""TCP"", ""UDP"")" &
        "#(lf)| extend ClientType = iff(" &
        "ClientType == ""com.microsoft.rdc.windows.msrdc.x64"", ""Win RD x64 (MSI)""," &
        "iff(ClientType == ""com.igel.rdc.linux"", ""IGEL""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.store"", ""Win RD Store""," &
        "iff(ClientType == ""com.microsoft.rdc.html"", ""Web Browser (HTML5)""," &
        "iff(ClientType == ""com.microsoft.rdc.macos"", ""MAC OS""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.msrdc.arm64"", ""Win RD ARM 64 (MSI)""," &
        "iff(ClientType == ""com.microsoft.rdc.ios"", ""iOS""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.msrdc.msix.x64"", ""Win RD x64 (MSIX)""," &
        "iff(ClientType == ""com.microsoft.rdc.windows.wa.msrdc.msix.arm64"", ""Win App x64 (MSIX)"", ""Other""))))))))))" &
        "#(lf)| extend Date = format_datetime(TimeGenerated, 'yyyy-MM-dd')" &
        "#(lf)| extend Time = format_datetime(TimeGenerated, 'HH:mm:ss.fff')" &
        "#(lf)| extend TimeKey = replace("":"", """", Time)", 
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    ),

    // Change the Date column type to date
    #"Changed Type" = Table.TransformColumnTypes(Source, {{"Date", type date}}),

    // Add a new column converting ClientSideIPAddress to numeric format
    #"4-fn_ConvertIP4toNumeric" = Table.AddColumn(
        #"Changed Type", 
        "ClientSideIPAddress-Numeric", 
        each #"4-fn_ConvertIP4toNumeric"([ClientSideIPAddress])
    )
in
    #"4-fn_ConvertIP4toNumeric"


