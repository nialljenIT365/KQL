let AnalyticsQuery =
let Source = Json.Document(Web.Contents("https://api.loganalytics.io/v1/workspaces/ce4e1e84-3765-4cfe-ac40-5de8d7633df4/query", 
[Query=[#"query"="let binSize = 30s; 
let timeRangeStart = now(-12h);
let timeRangeEnd = now();
let filterSubstring = ""ALL""; 
Perf
| where TimeGenerated between (timeRangeStart..timeRangeEnd)
| where ObjectName == ""Processor Information"" and CounterName == ""% Processor Time""
| where filterSubstring == ""ALL"" or tostring(Computer) contains filterSubstring
| summarize AVG_CPU_Utilization_per = round(avg(CounterValue), 2),
            MAX_CPU_Utilization_per = round(max(CounterValue), 2),
            MIN_CPU_Utilization_per = round(min(CounterValue), 2),
            MED_CPU_Utilization_per = round(percentile(CounterValue, 50), 2),
            ItemsPerTimeBin_int = count() 
  by BinnedTime = bin(TimeGenerated, binSize), Computer, Date = format_datetime(TimeGenerated, 'yyyy-MM-dd')
| extend Time = format_datetime(BinnedTime, 'HH:mm:ss') 
| where MAX_CPU_Utilization_per >=70 
| project Date, Time, Computer, AVG_CPU_Utilization_per, MED_CPU_Utilization_per, MAX_CPU_Utilization_per, MIN_CPU_Utilization_per, ItemsPerTimeBin_int
",#"x-ms-app"="OmsAnalyticsPBI",#"prefer"="ai.response-thinning=true"],Timeout=#duration(0,0,4,0)])),
TypeMap = #table(
{ "AnalyticsTypes", "Type" }, 
{ 
{ "string",   Text.Type },
{ "int",      Int32.Type },
{ "long",     Int64.Type },
{ "real",     Double.Type },
{ "timespan", Duration.Type },
{ "datetime", DateTimeZone.Type },
{ "bool",     Logical.Type },
{ "guid",     Text.Type },
{ "dynamic",  Text.Type }
}),
DataTable = Source[tables]{0},
Columns = Table.FromRecords(DataTable[columns]),
ColumnsWithType = Table.Join(Columns, {"type"}, TypeMap , {"AnalyticsTypes"}),
Rows = Table.FromRows(DataTable[rows], Columns[name]), 
Table = Table.TransformColumnTypes(Rows, Table.ToList(ColumnsWithType, (c) => { c{0}, c{3}}))
in
Table
in AnalyticsQuery
