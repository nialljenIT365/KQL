let
    // Start with a base time (midnight)
    BaseTime = #time(0, 0, 0), // Midnight
    
    // Generate a list of time values for a 24-hour period in 1-millisecond increments
    TimeList = List.Generate(
        () => 0, // Start at 0 milliseconds
        each _ < 86400000, // 24 hours * 60 minutes * 60 seconds * 1000 milliseconds = 86400000 milliseconds
        each _ + 1, // Increment by 1 millisecond
        each #time(0, 0, 0) + #duration(0, 0, 0, _ / 1000) // Convert milliseconds to fractional seconds
    ),
    
    // Convert the list of time values to a table
    #"Converted to Table" = Table.FromList(TimeList, Splitter.SplitByNothing(), {"Time"}, null, ExtraValues.Error),
    
    // Change the column type to Time
    #"Changed Type" = Table.TransformColumnTypes(#"Converted to Table",{{"Time", type time}}),
    
    // Add a column for the time as text without colons, formatted as a nine-digit number (HHmmssfff)
    #"Added Timekey" = Table.AddColumn(#"Changed Type", "Timekey", each let
        TimeValue = [Time],
        Hour = Time.Hour(TimeValue),
        Minute = Time.Minute(TimeValue),
        Second = Time.Second(TimeValue),
        Millisecond = Number.RoundDown((Duration.TotalMilliseconds(TimeValue - #time(Hour, Minute, Second))) * 1000),
        FormattedTime = 
            Text.PadStart(Text.From(Hour), 2, "0") & 
            Text.PadStart(Text.From(Minute), 2, "0") & 
            Text.PadStart(Text.From(Second), 2, "0") &
            Text.PadStart(Text.From(Millisecond), 3, "0")
    in
        FormattedTime)
in
    #"Added Timekey"
