Heartbeat
| summarize UniqueComputers = dcount(Computer) by bin(TimeGenerated, 1h)
| sort by TimeGenerated desc


Heartbeat
| sort by TimeGenerated desc 

returns

TimeGenerated [UTC]	SourceComputerId	ComputerIP	Computer	Category	OSType	OSName	OSMajorVersion	OSMinorVersion	Version	SCAgentChannel	RemoteIPLongitude	RemoteIPLatitude	RemoteIPCountry	SubscriptionId	ResourceGroup	ResourceProvider	Resource	ResourceId	ResourceType
28/11/2024, 16:05:29.561	dea86eb8-ca5b-4f64-9e97-a235e8e353c5	148.64.15.38	M01PSSPI0460.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0460	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0460	virtualMachines
28/11/2024, 16:05:29.014	86c64d21-a574-4871-9e96-f2b4f200758b	148.64.15.63	M01PSSPI0661.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0661	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0661	virtualMachines
28/11/2024, 16:05:28.599	9f1222a3-66dc-40d8-a341-8d0d4fa710c7	148.64.15.83	M01PSSPI0054.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0054	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0054	virtualMachines
28/11/2024, 16:05:28.123	afaf5aec-9558-434c-a35a-354804528c49	148.64.15.83	M01PSSPI0749.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0749	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0749	virtualMachines
28/11/2024, 16:05:28.068	f33ba81b-8ca1-4b34-9ff1-975c3340c007	148.64.15.38	M01PSSPI0564.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0564	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0564	virtualMachines
28/11/2024, 16:05:26.577	0fc7c230-9458-4041-b5ee-9e3e90e80dcf	148.64.15.9	M01PSSPI0810.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0810	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0810	virtualMachines
28/11/2024, 16:05:26.200	1fb9547f-ebca-4226-8c0a-e638918a0eef	148.64.15.23	M01PSSPI0296.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0296	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0296	virtualMachines
28/11/2024, 16:05:25.481	b8fc089f-7766-4323-9d1f-6255d1bb2ade	148.64.15.38	M01PSSPI0282.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0282	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0282	virtualMachines
28/11/2024, 16:05:25.356	393ab4c5-620c-4875-b2c6-f8b817cc8868	148.64.15.9	M01PSSPI0189.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0189	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0189	virtualMachines
28/11/2024, 16:05:24.927	4978d3ee-37c7-4cfb-afea-6a4cf0cd2fc6	148.64.15.63	M01PSSPI0690.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0690	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0690	virtualMachines
28/11/2024, 16:05:24.711	99b49065-0af8-41dd-8e0c-f12e430290cb	148.64.15.9	M01PSSPI0576.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0576	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0576	virtualMachines
28/11/2024, 16:05:23.115	946b01ba-15e2-4eac-93ed-8cffdf1a0c21	148.64.15.83	M01PSSPI0037.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0037	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0037	virtualMachines
28/11/2024, 16:05:20.659	34c9cd08-d13b-4c9d-9c0e-809a321658fc	148.64.15.63	M01PSSPI0843.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0843	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0843	virtualMachines
28/11/2024, 16:05:20.347	2533d17e-26d2-4ce0-9f17-0bd56308a5e9	148.64.15.23	M01PSSPI0329.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0329	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0329	virtualMachines
28/11/2024, 16:05:19.481	debcc465-3913-4b49-9479-ac2fb12fda33	148.64.15.9	M01PHCRI0002.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-RemoteAppVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PHCRI0002	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-RemoteAppVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PHCRI0002	virtualMachines
28/11/2024, 16:05:15.535	f28cbcc5-e3fe-4e71-8dbf-7b527eeb7021	148.64.15.68	M01PSSPI0381.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0381	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0381	virtualMachines
28/11/2024, 16:05:13.986	394ca27d-d9dc-4a8c-af3a-25dd4b1374f6	148.64.15.38	M01PSSPI0148.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0148	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0148	virtualMachines
28/11/2024, 16:05:12.423	716912c9-bb08-481c-88aa-5a1354dbe498	148.64.15.38	M01PSSPI0281.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0281	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0281	virtualMachines
28/11/2024, 16:05:09.668	48da92f5-20ce-40b1-a0d5-b27f95525960	148.64.15.9	M01PSSPI0377.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0377	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0377	virtualMachines
28/11/2024, 16:05:07.073	e043256a-6338-416b-9d2b-0c3f6918e524	148.64.15.68	M01PMSNI0016.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PMSNI0016	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PMSNI0016	virtualMachines
28/11/2024, 16:05:06.583	7993ae96-2183-49a6-b259-cc3132241585	148.64.15.38	M01PSSPI0149.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0149	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0149	virtualMachines
28/11/2024, 16:05:06.515	b8ff1215-bb7c-4a93-8af8-720a49a6a0a6	148.64.15.38	M01PSSPI0551.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0551	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0551	virtualMachines
28/11/2024, 16:05:03.964	32e878a3-a5f4-47ce-84a6-5aac8c5ba3e2	148.64.15.38	M01PSSPI0251.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0251	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0251	virtualMachines
28/11/2024, 16:05:00.334	7325c47d-dd91-4937-ba83-995c160f3320	148.64.15.23	M01PMSNI0005.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PMSNI0005	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PMSNI0005	virtualMachines
28/11/2024, 16:04:59.944	122b5b12-8d73-4433-b56c-515544209922	148.64.15.9	M01PSSPI0570.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0570	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0570	virtualMachines
28/11/2024, 16:04:59.936	beed67b6-be50-484f-bb22-9e2de6484f42	148.64.15.9	M01PMSNI0020.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PMSNI0020	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PMSNI0020	virtualMachines
28/11/2024, 16:04:59.859	8c605c47-c188-47db-8c4f-4de7ae8c69b3	148.64.15.63	M01PSSPI0596.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0596	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0596	virtualMachines
28/11/2024, 16:04:59.809	daaa23fe-0d99-44ce-8714-c2d52e57d591	148.64.15.38	M01PSSPI0355.aberdeen.aberdeen-asset.com	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	53.35	Ireland	01f03a19-5500-482a-b480-3bb664e0ebc2	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD	Microsoft.Compute	M01PSSPI0355	/subscriptions/01f03a19-5500-482a-b480-3bb664e0ebc2/resourceGroups/rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD/providers/Microsoft.Compute/virtualMachines/M01PSSPI0355	virtualMachines




let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "    Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),",  // EMEA (UTC+0)
            "    Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),",  // APAC (UTC+8)
            "    Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated),", // AMRS (UTC-5)
            "    datetime_add('hour', 0, TimeGenerated)",  // Default fallback
            "),",
            "Geo = case(",
            "    Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "    Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "    Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "    'Other'",
            "),",
            "Region = case(",
            "    Computer startswith 'M01', 'NEU',",
            "    Computer startswith 'M04', 'WEU',",
            "    Computer startswith 'M13', 'EAS',",
            "    Computer startswith 'M14', 'SEA',",
            "    Computer startswith 'M06', 'EUS2',",
            "    Computer startswith 'M09', 'CUS',",
            "    'Other'",
            "),",
            "Environment = case(",
            "    substring(Computer, 3, 1) == 'T', 'TST',",
            "    substring(Computer, 3, 1) == 'U', 'UAT',",
            "    substring(Computer, 3, 1) == 'D', 'DEV',",
            "    Computer contains 'NACR', 'CRIMS NonProdA',",
            "    Computer contains 'NBCR', 'CRIMS NonProdB',",
            "    Computer contains 'OHCR', 'OAT CRIMS High',",
            "    Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "    Computer contains 'OLCR', 'OAT CRIMS Low',",
            "    Computer contains 'PHCR', 'PRD CRIMS High',",
            "    Computer contains 'PMCR', 'PRD CRIMS High',",
            "    Computer contains 'PLCR', 'PRD CRIMS Low',",
            "    substring(Computer, 3, 1) == 'P', 'PRD',",
            "    'Other'",
            "),",
            "SessionHostPoolType = case(",
            "    Computer contains 'MSN', 'MultiSession',",
            "    Computer contains 'SSP', 'Personal',",
            "    Computer contains 'NACR', 'MultiSession',",
            "    Computer contains 'NBCR', 'MultiSession',",
            "    Computer contains 'OHCR', 'MultiSession',",
            "    Computer contains 'OMCR', 'MultiSession',",
            "    Computer contains 'OLCR', 'MultiSession',",
            "    Computer contains 'PHCR', 'MultiSession',",
            "    Computer contains 'PMCR', 'MultiSession',",
            "    Computer contains 'PLCR', 'MultiSession',",
            "    Computer contains 'DVLDT', 'Personal',",
            "    'Other'",
            "),",
            "ManagementPlane = case(",
            "    substring(Computer, 7, 1) == 'I', 'Intune',",
            "    substring(Computer, 7, 1) == 'G', 'GPO',",
            "    Computer contains 'DVLDT', 'Intune',",
            "    'Other'",
            "),",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2),",
            "          MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2),",
            "          MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),",
            "          MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source



let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents("https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg", "nmw-app-law-fwjv4wn75m4qg", "let paramRangeStart = todatetime('"", DateTime.ToText(strRangeStart, ""yyyy-MM-ddTHH:mm:ss""), ""');#(lf)let paramRangeEnd = todatetime('"", DateTime.ToText(strRangeEnd, ""yyyy-MM-ddTHH:mm:ss""), ""');#(lf)let binSize = 24h;#(lf)Perf#(lf)| extend #(lf)    LocalTime = case(#(lf)        Computer startswith ""M01"" or Computer startswith ""M04"", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)#(lf)        Computer startswith ""M13"" or Computer startswith ""M14"", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)#(lf)        Computer startswith ""M06"" or Computer startswith ""M09"", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)#(lf)        datetime_add('hour', 0, TimeGenerated) // Default fallback#(lf)    ),#(lf)    Geo = case(#(lf)        Computer startswith ""M01"" or Computer startswith ""M04"", ""EMEA"",#(lf)        Computer startswith ""M13"" or Computer startswith ""M14"", ""APAC"",#(lf)        Computer startswith ""M06"" or Computer startswith ""M09"", ""AMRS"",#(lf)        ""Other""#(lf)    ),#(lf)    Region = case(#(lf)        Computer startswith ""M01"", ""NEU"",#(lf)        Computer startswith ""M04"", ""WEU"",#(lf)        Computer startswith ""M13"", ""EAS"",#(lf)        Computer startswith ""M14"", ""SEA"",#(lf)        Computer startswith ""M06"", ""EUS2"",#(lf)        Computer startswith ""M09"", ""CUS"",#(lf)        ""Other""#(lf)    ), #(lf)    Environment = case(#(lf)        substring(Computer, 3, 1) == ""T"", ""TST"", #(lf)        substring(Computer, 3, 1) == ""U"", ""UAT"", #(lf)        substring(Computer, 3, 1) == ""D"", ""DEV"", #(lf)        Computer contains ""NACR"", ""CRIMS NonProdA"",#(lf)        Computer contains ""NBCR"", ""CRIMS NonProdB"",#(lf)        Computer contains ""OHCR"", ""OAT CRIMS High"",#(lf)        Computer contains ""OMCR"", ""OAT CRIMS Medium"",#(lf)        Computer contains ""OLCR"", ""OAT CRIMS Low"",#(lf)        Computer contains ""PHCR"", ""PRD CRIMS High"",#(lf)        Computer contains ""PMCR"", ""PRD CRIMS High"",#(lf)        Computer contains ""PLCR"", ""PRD CRIMS Low"",#(lf)        substring(Computer, 3, 1) == ""P"", ""PRD"", #(lf)        ""Other""#(lf)    ),#(lf)    SessionHostPoolType = case(#(lf)        Computer contains ""MSN"", ""MultiSession"",#(lf)        Computer contains ""SSP"", ""Personal"",#(lf)        Computer contains ""NACR"", ""MultiSession"",#(lf)        Computer contains ""NBCR"", ""MultiSession"",#(lf)        Computer contains ""OHCR"", ""MultiSession"",#(lf)        Computer contains ""OMCR"", ""MultiSession"",#(lf)        Computer contains ""OLCR"", ""MultiSession"",#(lf)        Computer contains ""PHCR"", ""MultiSession"",#(lf)        Computer contains ""PMCR"", ""MultiSession"",#(lf)        Computer contains ""PLCR"", ""MultiSession"",#(lf)        Computer contains ""DVLDT"", ""Personal"",#(lf)        ""Other""#(lf)    ),#(lf)    ManagementPlane = case(#(lf)        substring(Computer, 7, 1) == ""I"", ""Intune"",#(lf)        substring(Computer, 7, 1) == ""G"", ""GPO"",#(lf)        Computer contains ""DVLDT"", ""Intune"",#(lf)        ""Other""#(lf)    )#(lf)| extend DayOfWeek = dayofweek (LocalTime)#(lf)| extend HourOfDay = hourofday(LocalTime)#(lf)| extend SessionHostName = trim(' ', tolower(Computer))#(lf)| project-away Computer#(lf)| where LocalTime  between (paramRangeStart .. paramRangeEnd)#(lf)| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'#(lf)| where dayofweek(LocalTime) between (1d .. 5d)#(lf)| where hourofday(LocalTime)  between (8 .. 17)#(lf)| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2), #(lf)            MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2), #(lf)            MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),#(lf)            MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),#(lf)            ItemsPerTimeBin = count() // Counting the number of entries per time bin#(lf)  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType#(lf)  | project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin", [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
in
    Source






let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)",
            "        Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)",
            "        Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)",
            "        datetime_add('hour', 0, TimeGenerated) // Default fallback",
            "    ),",
            "    Geo = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "        Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "        Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "        'Other'",
            "    ),",
            "    Region = case(",
            "        Computer startswith 'M01', 'NEU',",
            "        Computer startswith 'M04', 'WEU',",
            "        Computer startswith 'M13', 'EAS',",
            "        Computer startswith 'M14', 'SEA',",
            "        Computer startswith 'M06', 'EUS2',",
            "        Computer startswith 'M09', 'CUS',",
            "        'Other'",
            "    ),",
            "    Environment = case(",
            "        substring(Computer, 3, 1) == 'T', 'TST',",
            "        substring(Computer, 3, 1) == 'U', 'UAT',",
            "        substring(Computer, 3, 1) == 'D', 'DEV',",
            "        Computer contains 'NACR', 'CRIMS NonProdA',",
            "        Computer contains 'NBCR', 'CRIMS NonProdB',",
            "        Computer contains 'OHCR', 'OAT CRIMS High',",
            "        Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "        Computer contains 'OLCR', 'OAT CRIMS Low',",
            "        Computer contains 'PHCR', 'PRD CRIMS High',",
            "        Computer contains 'PMCR', 'PRD CRIMS High',",
            "        Computer contains 'PLCR', 'PRD CRIMS Low',",
            "        substring(Computer, 3, 1) == 'P', 'PRD',",
            "        'Other'",
            "    ),",
            "    SessionHostPoolType = case(",
            "        Computer contains 'MSN', 'MultiSession',",
            "        Computer contains 'SSP', 'Personal',",
            "        Computer contains 'NACR', 'MultiSession',",
            "        Computer contains 'NBCR', 'MultiSession',",
            "        Computer contains 'OHCR', 'MultiSession',",
            "        Computer contains 'OMCR', 'MultiSession',",
            "        Computer contains 'OLCR', 'MultiSession',",
            "        Computer contains 'PHCR', 'MultiSession',",
            "        Computer contains 'PMCR', 'MultiSession',",
            "        Computer contains 'PLCR', 'MultiSession',",
            "        Computer contains 'DVLDT', 'Personal',",
            "        'Other'",
            "    ),",
            "    ManagementPlane = case(",
            "        substring(Computer, 7, 1) == 'I', 'Intune',",
            "        substring(Computer, 7, 1) == 'G', 'GPO',",
            "        Computer contains 'DVLDT', 'Intune',",
            "        'Other'",
            "    )",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2),",
            "          MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2),",
            "          MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),",
            "          MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source








let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
let binSize = 24h;
let timeRangeStart = now(-1d);
let timeRangeEnd = now();
Perf
| extend 
    LocalTime = case(
        Computer startswith "M01" or Computer startswith "M04", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)
        Computer startswith "M13" or Computer startswith "M14", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)
        Computer startswith "M06" or Computer startswith "M09", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)
        datetime_add('hour', 0, TimeGenerated) // Default fallback
    ),
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        Computer contains "NACR", "CRIMS NonProdA",
        Computer contains "NBCR", "CRIMS NonProdB",
        Computer contains "OHCR", "OAT CRIMS High",
        Computer contains "OMCR", "OAT CRIMS Medium",
        Computer contains "OLCR", "OAT CRIMS Low",
        Computer contains "PHCR", "PRD CRIMS High",
        Computer contains "PMCR", "PRD CRIMS High",
        Computer contains "PLCR", "PRD CRIMS Low",
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        Computer contains "NACR", "MultiSession",
        Computer contains "NBCR", "MultiSession",
        Computer contains "OHCR", "MultiSession",
        Computer contains "OMCR", "MultiSession",
        Computer contains "OLCR", "MultiSession",
        Computer contains "PHCR", "MultiSession",
        Computer contains "PMCR", "MultiSession",
        Computer contains "PLCR", "MultiSession",
        Computer contains "DVLDT", "Personal",
        "Other"
    ),
    ManagementPlane = case(
        substring(Computer, 7, 1) == "I", "Intune",
        substring(Computer, 7, 1) == "G", "GPO",
        Computer contains "DVLDT", "Intune",
        "Other"
    )
| extend DayOfWeek = dayofweek (LocalTime)
| extend HourOfDay = hourofday(LocalTime)
| extend SessionHostName = trim(' ', tolower(Computer))
| project-away Computer
| where LocalTime  between (paramRangeStart .. paramRangeEnd)
| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'
| where dayofweek(LocalTime) between (1d .. 5d)
| where hourofday(LocalTime)  between (8 .. 17)
| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2), 
            MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2), 
            MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),
            MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),
            ItemsPerTimeBin = count() // Counting the number of entries per time bin
  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType
  | project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin
Swap out the KQL below for the one above

let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),",
            "        Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),",
            "        Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated),",
            "        datetime_add('hour', 0, TimeGenerated)",
            "    ),",
            "    Geo = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "        Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "        Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "        'Other'",
            "    ),",
            "    Region = case(",
            "        Computer startswith 'M01', 'NEU',",
            "        Computer startswith 'M04', 'WEU',",
            "        Computer startswith 'M13', 'EAS',",
            "        Computer startswith 'M14', 'SEA',",
            "        Computer startswith 'M06', 'EUS2',",
            "        Computer startswith 'M09', 'CUS',",
            "        'Other'",
            "    ),",
            "    Environment = case(",
            "        substring(Computer, 3, 1) == 'T', 'TST',",
            "        substring(Computer, 3, 1) == 'U', 'UAT',",
            "        substring(Computer, 3, 1) == 'D', 'DEV',",
            "        Computer contains 'NACR', 'CRIMS NonProdA',",
            "        Computer contains 'NBCR', 'CRIMS NonProdB',",
            "        Computer contains 'OHCR', 'OAT CRIMS High',",
            "        Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "        Computer contains 'OLCR', 'OAT CRIMS Low',",
            "        Computer contains 'PHCR', 'PRD CRIMS High',",
            "        Computer contains 'PMCR', 'PRD CRIMS High',",
            "        Computer contains 'PLCR', 'PRD CRIMS Low',",
            "        substring(Computer, 3, 1) == 'P', 'PRD',",
            "        'Other'",
            "    ),",
            "    SessionHostPoolType = case(",
            "        Computer contains 'MSN', 'MultiSession',",
            "        Computer contains 'SSP', 'Personal',",
            "        Computer contains 'NACR', 'MultiSession',",
            "        Computer contains 'NBCR', 'MultiSession',",
            "        Computer contains 'OHCR', 'MultiSession',",
            "        Computer contains 'OMCR', 'MultiSession',",
            "        Computer contains 'OLCR', 'MultiSession',",
            "        Computer contains 'PHCR', 'MultiSession',",
            "        Computer contains 'PMCR', 'MultiSession',",
            "        Computer contains 'PLCR', 'MultiSession',",
            "        Computer contains 'DVLDT', 'Personal',",
            "        'Other'",
            "    ),",
            "    ManagementPlane = case(",
            "        substring(Computer, 7, 1) == 'I', 'Intune',",
            "        substring(Computer, 7, 1) == 'G', 'GPO',",
            "        Computer contains 'DVLDT', 'Intune',",
            "        'Other'",
            "    )",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Processor Information' and CounterName == '% Processor Time'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_CPU = round(avg(CounterValue), 2),",
            "          MAX_CPU = round(max(CounterValue), 2),",
            "          MIN_CPU = round(min(CounterValue), 2),",
            "          MED_CPU = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, SessionHostPoolType, ManagementPlane",
            "| extend SessionHostKey = substring(SessionHostName, 0, 8)",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, SessionHostKey, Geo, Region, Environment, ManagementPlane, AVG_CPU, MAX_CPU, MED_CPU, MIN_CPU, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source







let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "Perf",
            "| where TimeGenerated between (paramRangeStart..paramRangeEnd)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| summarize arg_max(TimeGenerated, *) by SessionHostName",
            "| extend SessionHostKey = substring(SessionHostName, 0, 8)",
            "| project TimeGenerated, SessionHostName, SessionHostKey"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    ),
    #"Removed Duplicates" = Table.Distinct(Source)
in
    #"Removed Duplicates"


let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
Perf
| where TimeGenerated between (paramRangeStart..paramRangeEnd)
| extend SessionHostName = trim(' ', tolower(Computer))
|project-away Computer
| summarize arg_max(TimeGenerated, *) by SessionHostName
| extend SessionHostKey = substring(SessionHostName, 0, 8)
| project TimeGenerated, SessionHostName, SessionHostKey

replace KQL in M-Query below with KQL above.

let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "WVDConnections",
            "| where TimeGenerated between (paramRangeStart..paramRangeEnd)",
            "| where SessionHostName != '<>'",
            "| extend HostPoolName = tostring(split(_ResourceId, '/')[-1])",
            "| summarize arg_max(TimeGenerated, *) by SessionHostName",
            "| extend SessionHostName = trim(' ', tolower(SessionHostName))",
            "| project TimeGenerated, SessionHostName, HostPoolName"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    ),
    #"Removed Duplicates" = Table.Distinct(Source)
in
    #"Removed Duplicates"

Working KQL for CPU

let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
let binSize = 24h;
let timeRangeStart = now(-1d);
let timeRangeEnd = now();
Perf
| extend 
    LocalTime = case(
        Computer startswith "M01" or Computer startswith "M04", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)
        Computer startswith "M13" or Computer startswith "M14", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)
        Computer startswith "M06" or Computer startswith "M09", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)
        datetime_add('hour', 0, TimeGenerated) // Default fallback
    ),
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        Computer contains "NACR", "CRIMS NonProdA",
        Computer contains "NBCR", "CRIMS NonProdB",
        Computer contains "OHCR", "OAT CRIMS High",
        Computer contains "OMCR", "OAT CRIMS Medium",
        Computer contains "OLCR", "OAT CRIMS Low",
        Computer contains "PHCR", "PRD CRIMS High",
        Computer contains "PMCR", "PRD CRIMS High",
        Computer contains "PLCR", "PRD CRIMS Low",
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        Computer contains "NACR", "MultiSession",
        Computer contains "NBCR", "MultiSession",
        Computer contains "OHCR", "MultiSession",
        Computer contains "OMCR", "MultiSession",
        Computer contains "OLCR", "MultiSession",
        Computer contains "PHCR", "MultiSession",
        Computer contains "PMCR", "MultiSession",
        Computer contains "PLCR", "MultiSession",
        Computer contains "DVLDT", "Personal",
        "Other"
    ),
    ManagementPlane = case(
        substring(Computer, 7, 1) == "I", "Intune",
        substring(Computer, 7, 1) == "G", "GPO",
        Computer contains "DVLDT", "Intune",
        "Other"
    )
| extend DayOfWeek = dayofweek (LocalTime)
| extend HourOfDay = hourofday(LocalTime)
| extend SessionHostName = trim(' ', tolower(Computer))
| project-away Computer
| where LocalTime  between (paramRangeStart .. paramRangeEnd)
| where ObjectName == "Processor Information" and CounterName == "% Processor Time"
| where dayofweek(LocalTime) between (1d .. 5d)
| where hourofday(LocalTime)  between (8 .. 17)
| summarize AVG_CPU = round(avg(CounterValue), 2), 
            MAX_CPU = round(max(CounterValue), 2), 
            MIN_CPU = round(min(CounterValue), 2),
            MED_CPU = round(percentile(CounterValue, 50), 2),
            ItemsPerTimeBin = count() // Counting the number of entries per time bin
  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane
  | project TimeGenerated = BinnedTime, SessionHostName, Geo, Region, Environment, ManagementPlane, AVG_CPU, MAX_CPU, MED_CPU, MIN_CPU, ItemsPerTimeBin
