let
    // Source query from Azure Data Explorer
    Source = AzureDataExplorer.Contents(
        LAWClusterURLAVD, 
        LAWNameAVD, 
        "WVDConnectionNetworkData" &
        "#(lf)| where TimeGenerated >= ago(30d)" &
        "#(lf)| extend HostPoolName = tostring(split(_ResourceId, '/')[-1])" &  // Extract value after the last "/"
        "#(lf)| extend HostPoolName = trim(' ', tolower(HostPoolName))" &  // Trim spaces and convert to lowercase
        "#(lf)| extend Timekey = format_datetime(TimeGenerated, 'HHmm')",    // Adds Timekey column        
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    ),
    #"Duplicated Column" = Table.DuplicateColumn(Source, "TimeGenerated", "TimeGenerated - Copy"),
    #"Duplicated Column1" = Table.DuplicateColumn(#"Duplicated Column", "TimeGenerated", "TimeGenerated - Copy.1"),
    #"Reordered Columns" = Table.ReorderColumns(#"Duplicated Column1",{"TenantId", "TimeGenerated", "TimeGenerated - Copy", "TimeGenerated - Copy.1", "CorrelationId", "EstRoundTripTimeInMs", "EstAvailableBandwidthKBps", "SourceSystem", "Type", "_ResourceId", "HostPoolName", "Timekey"}),
    #"Renamed Columns" = Table.RenameColumns(#"Reordered Columns",{{"TimeGenerated - Copy", "Date"}, {"TimeGenerated - Copy.1", "Time"}}),
    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"Date", type date}, {"Time", type text}}),
    #"Extracted Text After Delimiter" = Table.TransformColumns(#"Changed Type", {{"Time", each Text.AfterDelimiter(_, "T"), type text}}),
    #"Extracted First Characters" = Table.TransformColumns(#"Extracted Text After Delimiter", {{"Time", each Text.Start(_, 12), type text}}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Extracted First Characters",{{"Time", type time}})
in
    #"Changed Type1"
