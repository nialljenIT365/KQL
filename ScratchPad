let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),",
            "        Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),",
            "        Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated),",
            "        datetime_add('hour', 0, TimeGenerated)",
            "    ),",
            "    Geo = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "        Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "        Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "        'Other'",
            "    ),",
            "    Region = case(",
            "        Computer startswith 'M01', 'NEU',",
            "        Computer startswith 'M04', 'WEU',",
            "        Computer startswith 'M13', 'EAS',",
            "        Computer startswith 'M14', 'SEA',",
            "        Computer startswith 'M06', 'EUS2',",
            "        Computer startswith 'M09', 'CUS',",
            "        'Other'",
            "    ),",
            "    Environment = case(",
            "        substring(Computer, 3, 1) == 'T', 'TST',",
            "        substring(Computer, 3, 1) == 'U', 'UAT',",
            "        substring(Computer, 3, 1) == 'D', 'DEV',",
            "        Computer contains 'NACR', 'CRIMS NonProdA',",
            "        Computer contains 'NBCR', 'CRIMS NonProdB',",
            "        Computer contains 'OHCR', 'OAT CRIMS High',",
            "        Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "        Computer contains 'OLCR', 'OAT CRIMS Low',",
            "        Computer contains 'PHCR', 'PRD CRIMS High',",
            "        Computer contains 'PMCR', 'PRD CRIMS High',",
            "        Computer contains 'PLCR', 'PRD CRIMS Low',",
            "        substring(Computer, 3, 1) == 'P', 'PRD',",
            "        'Other'",
            "    ),",
            "    SessionHostPoolType = case(",
            "        Computer contains 'MSN', 'MultiSession',",
            "        Computer contains 'SSP', 'Personal',",
            "        Computer contains 'NACR', 'MultiSession',",
            "        Computer contains 'NBCR', 'MultiSession',",
            "        Computer contains 'OHCR', 'MultiSession',",
            "        Computer contains 'OMCR', 'MultiSession',",
            "        Computer contains 'OLCR', 'MultiSession',",
            "        Computer contains 'PHCR', 'MultiSession',",
            "        Computer contains 'PMCR', 'MultiSession',",
            "        Computer contains 'PLCR', 'MultiSession',",
            "        Computer contains 'DVLDT', 'Personal',",
            "        'Other'",
            "    ),",
            "    ManagementPlane = case(",
            "        substring(Computer, 7, 1) == 'I', 'Intune',",
            "        substring(Computer, 7, 1) == 'G', 'GPO',",
            "        Computer contains 'DVLDT', 'Intune',",
            "        'Other'",
            "    )",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2),",
            "          MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2),",
            "          MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),",
            "          MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, SessionHostPoolType, ManagementPlane",
            "| extend SessionHostKey = substring(SessionHostName, 0, 8)",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, SessionHostKey, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source





Processor Information(_Total)\% Processor Time
Memory(*)\% Committed Bytes In Use
Memory(*)\Page Faults/sec
Memory(*)\Pages/sec
LogicalDisk(C:)\% Free Space
LogicalDisk(C:)\Current Disk Queue Length
PhysicalDisk(*)\Avg. Disk sec/Read
PhysicalDisk(*)\Avg. Disk sec/Write
PhysicalDisk(*)\Avg. Disk sec/Transfer



Heartbeat
| extend 
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        "Other"
    )
| summarize 
    CountComputers_EMEA = dcountif(Computer, Geo == "EMEA"),
    CountComputers_APAC = dcountif(Computer, Geo == "APAC"),
    CountComputers_AMRS = dcountif(Computer, Geo == "AMRS"),
    CountComputers_Geo_Other = dcountif(Computer, Geo == "Other"),
    CountComputers_NEU = dcountif(Computer, Region == "NEU"),
    CountComputers_SEA = dcountif(Computer, Region == "SEA"),
    CountComputers_EUS2 = dcountif(Computer, Region == "EUS2"),
    CountComputers_Region_Other = dcountif(Computer, Region == "Other"),
    CountComputers_PRD = dcountif(Computer, Environment == "PRD"),
    CountComputers_UAT = dcountif(Computer, Environment == "UAT"),
    CountComputers_DEV = dcountif(Computer, Environment == "DEV"),
    CountComputers_Environment_Other = dcountif(Computer, Environment == "Other"),
    CountComputers_Personal = dcountif(Computer, SessionHostPoolType == "Personal"),
    CountComputers_MultiSession = dcountif(Computer, SessionHostPoolType == "MultiSession"),
    CountComputers_SessionHostPool_Other = dcountif(Computer, SessionHostPoolType == "Other")
    by bin(TimeGenerated, 1h)
| sort by TimeGenerated desc





Heartbeat
| extend 
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        "Other"
    )
| summarize 
    CountComputers_EMEA = dcountif(Computer, Geo == "EMEA"),
    CountComputers_APAC = dcountif(Computer, Geo == "APAC"),
    CountComputers_AMRS = dcountif(Computer, Geo == "AMRS"),
    CountComputers_NEU = dcountif(Computer, Region == "NEU"),
    CountComputers_SEA = dcountif(Computer, Region == "SEA"),
    CountComputers_EUS2 = dcountif(Computer, Region == "EUS2"),
    CountComputers_PRD = dcountif(Computer, Environment == "PRD"),
    CountComputers_UAT = dcountif(Computer, Environment == "UAT"),
    CountComputers_DEV = dcountif(Computer, Environment == "DEV"),
    CountComputers_Personal = dcountif(Computer, SessionHostPoolType == "Personal"),
    CountComputers_MultiSession = dcountif(Computer, SessionHostPoolType == "MultiSession")
    by bin(TimeGenerated, 1h)
| sort by TimeGenerated desc









let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "    Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),",  // EMEA (UTC+0)
            "    Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),",  // APAC (UTC+8)
            "    Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated),", // AMRS (UTC-5)
            "    datetime_add('hour', 0, TimeGenerated)",  // Default fallback
            "),",
            "Geo = case(",
            "    Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "    Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "    Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "    'Other'",
            "),",
            "Region = case(",
            "    Computer startswith 'M01', 'NEU',",
            "    Computer startswith 'M04', 'WEU',",
            "    Computer startswith 'M13', 'EAS',",
            "    Computer startswith 'M14', 'SEA',",
            "    Computer startswith 'M06', 'EUS2',",
            "    Computer startswith 'M09', 'CUS',",
            "    'Other'",
            "),",
            "Environment = case(",
            "    substring(Computer, 3, 1) == 'T', 'TST',",
            "    substring(Computer, 3, 1) == 'U', 'UAT',",
            "    substring(Computer, 3, 1) == 'D', 'DEV',",
            "    Computer contains 'NACR', 'CRIMS NonProdA',",
            "    Computer contains 'NBCR', 'CRIMS NonProdB',",
            "    Computer contains 'OHCR', 'OAT CRIMS High',",
            "    Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "    Computer contains 'OLCR', 'OAT CRIMS Low',",
            "    Computer contains 'PHCR', 'PRD CRIMS High',",
            "    Computer contains 'PMCR', 'PRD CRIMS High',",
            "    Computer contains 'PLCR', 'PRD CRIMS Low',",
            "    substring(Computer, 3, 1) == 'P', 'PRD',",
            "    'Other'",
            "),",
            "SessionHostPoolType = case(",
            "    Computer contains 'MSN', 'MultiSession',",
            "    Computer contains 'SSP', 'Personal',",
            "    Computer contains 'NACR', 'MultiSession',",
            "    Computer contains 'NBCR', 'MultiSession',",
            "    Computer contains 'OHCR', 'MultiSession',",
            "    Computer contains 'OMCR', 'MultiSession',",
            "    Computer contains 'OLCR', 'MultiSession',",
            "    Computer contains 'PHCR', 'MultiSession',",
            "    Computer contains 'PMCR', 'MultiSession',",
            "    Computer contains 'PLCR', 'MultiSession',",
            "    Computer contains 'DVLDT', 'Personal',",
            "    'Other'",
            "),",
            "ManagementPlane = case(",
            "    substring(Computer, 7, 1) == 'I', 'Intune',",
            "    substring(Computer, 7, 1) == 'G', 'GPO',",
            "    Computer contains 'DVLDT', 'Intune',",
            "    'Other'",
            "),",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2),",
            "          MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2),",
            "          MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),",
            "          MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source



'summarize' operator: Failed to resolve scalar expression named 'SessionHostName'
Request id: 21739e04-8fcc-4535-b158-c221450d4704

Heartbeat
| extend 
    LocalTime = case(
        Computer startswith "M01" or Computer startswith "M04", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)
        Computer startswith "M13" or Computer startswith "M14", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)
        Computer startswith "M06" or Computer startswith "M09", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)
        datetime_add('hour', 0, TimeGenerated) // Default fallback
    ),
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        Computer contains "NACR", "CRIMS NonProdA",
        Computer contains "NBCR", "CRIMS NonProdB",
        Computer contains "OHCR", "OAT CRIMS High",
        Computer contains "OMCR", "OAT CRIMS Medium",
        Computer contains "OLCR", "OAT CRIMS Low",
        Computer contains "PHCR", "PRD CRIMS High",
        Computer contains "PMCR", "PRD CRIMS High",
        Computer contains "PLCR", "PRD CRIMS Low",
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        Computer contains "NACR", "MultiSession",
        Computer contains "NBCR", "MultiSession",
        Computer contains "OHCR", "MultiSession",
        Computer contains "OMCR", "MultiSession",
        Computer contains "OLCR", "MultiSession",
        Computer contains "PHCR", "MultiSession",
        Computer contains "PMCR", "MultiSession",
        Computer contains "PLCR", "MultiSession",
        Computer contains "DVLDT", "Personal",
        "Other"
    )
| summarize 
    Geo_Unique_Computers = dcountif(SessionHostName, Geo == "EMEA") by bin(LocalTime, 1h),
    Region_Unique_Computers = dcountif(SessionHostName, Geo == "APAC"),
    Environment_Unique_Computers = dcountif(SessionHostName, Geo == "AMRS")





//let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
//let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
Heartbeat
| extend 
    LocalTime = case(
        Computer startswith "M01" or Computer startswith "M04", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)
        Computer startswith "M13" or Computer startswith "M14", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)
        Computer startswith "M06" or Computer startswith "M09", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)
        datetime_add('hour', 0, TimeGenerated) // Default fallback
    ),
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        Computer contains "NACR", "CRIMS NonProdA",
        Computer contains "NBCR", "CRIMS NonProdB",
        Computer contains "OHCR", "OAT CRIMS High",
        Computer contains "OMCR", "OAT CRIMS Medium",
        Computer contains "OLCR", "OAT CRIMS Low",
        Computer contains "PHCR", "PRD CRIMS High",
        Computer contains "PMCR", "PRD CRIMS High",
        Computer contains "PLCR", "PRD CRIMS Low",
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        Computer contains "NACR", "MultiSession",
        Computer contains "NBCR", "MultiSession",
        Computer contains "OHCR", "MultiSession",
        Computer contains "OMCR", "MultiSession",
        Computer contains "OLCR", "MultiSession",
        Computer contains "PHCR", "MultiSession",
        Computer contains "PMCR", "MultiSession",
        Computer contains "PLCR", "MultiSession",
        Computer contains "DVLDT", "Personal",
        "Other"
    ),
    ManagementPlane = case(
        substring(Computer, 7, 1) == "I", "Intune",
        substring(Computer, 7, 1) == "G", "GPO",
        Computer contains "DVLDT", "Intune",
        "Other"
    )
| extend SessionHostName = trim(' ', tolower(Computer))
| project-away Computer
| project LocalTime, Geo, Region, Environment, SessionHostPoolType, ManagementPlane, SessionHostName, ResourceGroup

returns
LocalTime [UTC]	Geo	Region	Environment	SessionHostPoolType	ManagementPlane	SessionHostName	ResourceGroup
28/11/2024, 10:04:42.629	EMEA	NEU	PRD	Personal	Intune	m01psspi0227.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 10:05:12.905	EMEA	NEU	PRD	Personal	Intune	m01psspi0180.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 18:12:49.421	APAC	SEA	PRD	Personal	Intune	m14psspi0152.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-SEA-PRD
28/11/2024, 10:19:01.015	EMEA	NEU	PRD	Personal	Intune	m01psspi0353.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 11:34:33.011	EMEA	NEU	PRD	Personal	Intune	m01psspi0310.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:36:22.379	EMEA	NEU	PRD	Personal	Intune	m01psspi0878.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:41:28.323	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:42:28.321	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:43:28.335	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:44:28.338	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:45:28.360	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 21:45:49.451	APAC	SEA	PRD	Personal	Intune	m14psspi0121.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-SEA-PRD
28/11/2024, 13:46:28.378	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:47:28.398	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:48:28.409	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:49:28.412	EMEA	NEU	PRD	Personal	Intune	m01psspi0300.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:00.333	EMEA	NEU	PRD	Personal	Intune	m01psspi0678.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 08:50:00.461	AMRS	EUS2	PRD	Personal	GPO	m06psspg0090.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-EUS2-PRD
28/11/2024, 08:50:00.561	AMRS	EUS2	UAT	Personal	GPO	m06usspg0012.aberdeen.aberdeen-asset.com	RG-EUS-REMOTEDESKTOPDEVICES-UATVIRTUALDESKTOP-EUS2-PRD
28/11/2024, 13:50:01.065	EMEA	NEU	PRD	Personal	Intune	m01psspi0736.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:01.122	EMEA	NEU	PRD	Personal	Intune	m01psspi0167.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:01.407	EMEA	NEU	PRD	Personal	Intune	m01psspi0886.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:01.455	EMEA	NEU	PRD	Personal	Intune	m01psspi0346.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 21:50:01.538	APAC	SEA	PRD	Personal	Intune	m14psspi0017.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-SEA-PRD
28/11/2024, 13:50:01.615	EMEA	NEU	PRD	Personal	Intune	m01psspi0712.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:01.806	EMEA	NEU	PRD	Personal	Intune	m01psspi0679.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:02.242	EMEA	NEU	PRD	Personal	Intune	m01psspi0443.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:02.423	EMEA	NEU	PRD	Personal	Intune	m01psspi0318.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 21:50:03.280	APAC	SEA	PRD	Personal	Intune	m14psspi0038.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-SEA-PRD
28/11/2024, 13:50:04.538	EMEA	NEU	PRD	Personal	Intune	m01psspi0729.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 08:50:04.768	AMRS	EUS2	PRD	Personal	GPO	m06psspg0014.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-EUS2-PRD
28/11/2024, 13:50:04.860	EMEA	NEU	PRD	MultiSession	Intune	m01pmsni0021.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:04.939	EMEA	NEU	UAT	Personal	Intune	m01usspi0017.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-UATVirtualDesktop-NEU-PRD
28/11/2024, 21:50:05.394	APAC	SEA	PRD	Personal	Intune	m14psspi0053.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-SEA-PRD
28/11/2024, 08:50:05.669	AMRS	EUS2	PRD	Personal	GPO	m06psspg0042.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-EUS2-PRD
28/11/2024, 13:50:05.740	EMEA	NEU	PRD	Personal	Intune	m01psspi0465.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:05.810	EMEA	NEU	UAT	Personal	Intune	m01usspi0002.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-UATVirtualDesktop-NEU-PRD
28/11/2024, 13:50:05.828	EMEA	NEU	PRD	Personal	Intune	m01psspi0563.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:05.980	EMEA	NEU	UAT	Personal	Intune	m01usspi0028.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-UATVirtualDesktop-NEU-PRD
28/11/2024, 13:50:06.259	EMEA	NEU	PRD	Personal	Intune	m01psspi0026.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 08:50:06.430	AMRS	EUS2	UAT	Personal	GPO	m06usspg0010.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-UATVirtualDesktop-EUS2-PRD
28/11/2024, 13:50:06.436	EMEA	NEU	PRD	MultiSession	Intune	m01pmsni0019.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD
28/11/2024, 08:50:06.728	AMRS	EUS2	PRD	Personal	GPO	m06psspg0005.aberdeen.aberdeen-asset.com	RG-EUS-REMOTEDESKTOPDEVICES-PERSISTENTVIRTUALDESKTOP-EUS2-PRD
28/11/2024, 13:50:07.417	EMEA	NEU	PRD	Personal	Intune	m01psspi0034.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:07.671	EMEA	NEU	PRD	Personal	Intune	m01psspi0730.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:08.487	EMEA	NEU	PRD	Personal	Intune	m01psspi0665.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:08.721	EMEA	NEU	PRD	Personal	Intune	m01psspi0580.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:09.248	EMEA	NEU	PRD	Personal	Intune	m01psspi0030.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 21:50:09.388	APAC	SEA	PRD	Personal	Intune	m14psspi0122.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-SEA-PRD
28/11/2024, 13:50:09.802	EMEA	NEU	PRD	Personal	Intune	m01psspi0028.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:09.942	EMEA	NEU	PRD	Personal	Intune	m01psspi0293.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:10.139	EMEA	NEU	PRD	Personal	Intune	m01psspi0692.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 21:50:10.225	APAC	SEA	PRD	Personal	Intune	m14psspi0094.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-SEA-PRD
28/11/2024, 08:50:10.595	AMRS	EUS2	UAT	Personal	GPO	m06usspg0017.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-UATVirtualDesktop-EUS2-PRD
28/11/2024, 13:50:10.637	EMEA	NEU	PRD	Personal	Intune	m01psspi0695.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 13:50:10.685	EMEA	NEU	PRD	Personal	Intune	m01psspi0597.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-PersistentVirtualDesktop-NEU-PRD
28/11/2024, 21:50:10.846	APAC	SEA	PRD	Personal	Intune	m14psspi0097.aberdeen.aberdeen-asset.com	RG-EUS-REMOTEDESKTOPDEVICES-PERSISTENTVIRTUALDESKTOP-SEA-PRD
28/11/2024, 13:50:11.087	EMEA	NEU	PRD	MultiSession	Intune	m01pmsni0070.aberdeen.aberdeen-asset.com	rg-EUS-RemoteDesktopDevices-NonPersistentVirtualDesktop-NEU-PRD






//let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
//let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
Heartbeat
| extend 
    LocalTime = case(
        Computer startswith "M01" or Computer startswith "M04", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)
        Computer startswith "M13" or Computer startswith "M14", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)
        Computer startswith "M06" or Computer startswith "M09", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)
        datetime_add('hour', 0, TimeGenerated) // Default fallback
    ),
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        Computer contains "NACR", "CRIMS NonProdA",
        Computer contains "NBCR", "CRIMS NonProdB",
        Computer contains "OHCR", "OAT CRIMS High",
        Computer contains "OMCR", "OAT CRIMS Medium",
        Computer contains "OLCR", "OAT CRIMS Low",
        Computer contains "PHCR", "PRD CRIMS High",
        Computer contains "PMCR", "PRD CRIMS High",
        Computer contains "PLCR", "PRD CRIMS Low",
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        Computer contains "NACR", "MultiSession",
        Computer contains "NBCR", "MultiSession",
        Computer contains "OHCR", "MultiSession",
        Computer contains "OMCR", "MultiSession",
        Computer contains "OLCR", "MultiSession",
        Computer contains "PHCR", "MultiSession",
        Computer contains "PMCR", "MultiSession",
        Computer contains "PLCR", "MultiSession",
        Computer contains "DVLDT", "Personal",
        "Other"
    ),
    ManagementPlane = case(
        substring(Computer, 7, 1) == "I", "Intune",
        substring(Computer, 7, 1) == "G", "GPO",
        Computer contains "DVLDT", "Intune",
        "Other"
    )
| extend DayOfWeek = dayofweek (LocalTime)
| extend HourOfDay = hourofday(LocalTime)
| extend SessionHostName = trim(' ', tolower(Computer))
| project-away Computer

returns
TimeGenerated [UTC]	SourceComputerId	ComputerIP	Category	OSType	OSName	OSMajorVersion	OSMinorVersion	Version	SCAgentChannel	RemoteIPLongitude	LocalTime [UTC]	Geo	Region	Environment	SessionHostPoolType	ManagementPlane	DayOfWeek	HourOfDay	SessionHostName
28/11/2024, 10:22:45.664	83d388de-13fe-452c-b174-c0792f3a271d	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 10:22:45.664	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	10	m01psspi0795.aberdeen.aberdeen-asset.com
28/11/2024, 10:23:10.544	10a325d4-8245-4aea-a9ab-999f40a08f87	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 10:23:10.544	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	10	m01psspi0836.aberdeen.aberdeen-asset.com
28/11/2024, 10:23:16.404	a7d5d940-495d-4cf1-9932-fc7a6ec360f4	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 10:23:16.404	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	10	m01psspi0794.aberdeen.aberdeen-asset.com
28/11/2024, 12:50:51.690	aab8f7c5-8230-4a87-a9ea-8d318446f631	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 12:50:51.690	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	12	m01psspi0828.aberdeen.aberdeen-asset.com
28/11/2024, 14:36:51.690	6e0e38ec-3083-4b21-be75-7ddcea58c020	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 14:36:51.690	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	14	m01psspi0478.aberdeen.aberdeen-asset.com
28/11/2024, 14:51:43.952	c87afc8b-60cd-46f5-85f9-5bf5ce1e6f0f	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 14:51:43.952	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	14	m01psspi0126.aberdeen.aberdeen-asset.com
28/11/2024, 15:21:31.352	24b44269-ed4a-40f4-affe-40f8ce90a5c6	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:21:31.352	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0127.aberdeen.aberdeen-asset.com
28/11/2024, 15:33:27.039	56848ab4-d251-4bd8-94f5-6dc0557304b8	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:33:27.039	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0227.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.114	3bd049a1-6e86-4943-8801-57dcb0091883	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.114	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0706.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.142	7325c47d-dd91-4937-ba83-995c160f3320	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.142	EMEA	NEU	PRD	MultiSession	Intune	4.00:00:00	15	m01pmsni0005.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.143	dbab448e-97c0-4ed9-a8ca-b6447e47d693	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.143	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0459.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.277	7ba88fd1-31db-4049-a464-8a4e0e8820a3	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.277	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0229.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.292	6337efed-da0e-43c0-90ba-0875bd783c49	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.292	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0419.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.534	d94dbd6c-a185-413b-a7d0-3c0d821f2a16	103.246.37.6	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	103.86	28/11/2024, 23:34:00.534	APAC	SEA	PRD	Personal	Intune	4.00:00:00	23	m14psspi0007.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.567	741f13bc-04f6-4571-b83e-2aea804d13f3	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.567	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0352.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.596	657bd78a-8660-4416-95ac-8a37d8a53c8e	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.596	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0147.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.664	ed278c28-dde3-421e-9e84-b433f9b3ec90	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.664	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0328.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.668	790a2df4-9049-46b0-9957-ab94a1a8e56f	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.668	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0162.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.685	4545ec9e-e635-4bbd-921d-a16bbbd57c65	103.246.37.60	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.29.0.0	Direct	103.86	28/11/2024, 23:34:00.685	APAC	SEA	PRD	Personal	Intune	4.00:00:00	23	m14psspi0004.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.734	50bd831b-622b-41dd-9247-e48babce3e13	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.734	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0753.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:00.899	849d9732-b5c1-4856-a057-1dac834a9dac	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:00.899	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0628.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:01.523	559e9d82-f0ba-406c-a576-a4bebe584091	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:01.523	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0348.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:01.789	8ccf30a2-afa4-4854-ae47-eaf34e35b291	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:01.789	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0359.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:01.999	b7850780-d171-4961-9c48-39a6fbeb2b02	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:01.999	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0167.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.030	73402096-924a-4129-9ed6-62495fbed6f2	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:02.030	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0736.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.229	f5002e6e-4cfd-4d36-ad43-ebcdf83ec9bc	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:02.229	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0886.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.277	dbb31b6c-1b40-4146-b782-4c2ad74886c2	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:02.277	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0346.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.322	92477145-7350-4ae3-985b-c9edea541b22	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:02.322	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0712.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.419	a3e1e696-acba-480f-bb2d-e591ded91418	103.246.37.6	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.29.0.0	Direct	103.86	28/11/2024, 23:34:02.419	APAC	SEA	PRD	Personal	Intune	4.00:00:00	23	m14psspi0017.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.583	9aac51a0-d357-4972-99c7-2efdd20e95db	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:02.583	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0679.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.963	85d75255-5038-4064-bdcf-797b6e9da500	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:02.963	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0128.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:02.998	27f97d61-c360-48dd-9bfa-2bf81ccf6a5c	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:02.998	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0674.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:03.156	abca6335-31df-4c6f-b299-54cd5319cb78	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:03.156	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0318.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:03.264	b2dce851-f146-4f11-936e-5b6c1642aa5b	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:03.264	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0151.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:03.648	b7a2f582-1df0-45fb-b73b-7eda59105289	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:03.648	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0443.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:03.764	32e878a3-a5f4-47ce-84a6-5aac8c5ba3e2	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:03.764	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0251.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:04.030	095449b1-5e69-4569-9261-db99fcb06974	103.246.37.5	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	103.86	28/11/2024, 23:34:04.030	APAC	SEA	PRD	Personal	Intune	4.00:00:00	23	m14psspi0038.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:04.446	6742d53c-8069-4685-b3f6-8b6529aa800b	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:04.446	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0064.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:04.817	132b46c5-201c-4abc-b8f1-5e0a2f9d3fb9	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:04.817	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0002.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.261	776b99db-4b83-484d-8030-a28637dd4d1b	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:05.261	EMEA	NEU	PRD	MultiSession	Intune	4.00:00:00	15	m01pmsni0024.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.304	0e77c7ec-41f2-4c6d-a811-5506294c347e	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:05.304	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0729.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.356	948f91e1-0ae1-45cd-9612-11ffd8ac8c78	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:05.356	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0450.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.492	3c56be89-c869-427c-8e10-aa55f5c21bea	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:05.492	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0361.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.586	61e204fe-c74a-4d31-b840-fd7ee6183d59	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:05.586	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0845.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.700	3e1c24d5-5562-4c04-b782-1a580f89f92a	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:05.700	EMEA	NEU	PRD	MultiSession	Intune	4.00:00:00	15	m01pmsni0021.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.715	3bc3f501-200e-485c-89fc-3e513b6b6ed7	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:05.715	EMEA	NEU	CRIMS NonProdA	MultiSession	Intune	4.00:00:00	15	m01nacri0002.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:05.907	bcc29029-25e4-479b-b633-191f6d69a2d9	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.29.0.0	Direct	-6.24	28/11/2024, 15:34:05.907	EMEA	NEU	UAT	Personal	Intune	4.00:00:00	15	m01usspi0002.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.157	7993ae96-2183-49a6-b259-cc3132241585	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.157	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0149.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.201	b8ff1215-bb7c-4a93-8af8-720a49a6a0a6	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.201	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0551.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.239	f0cdbf07-0d3a-45c3-a1d1-acf6e928fffc	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.239	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0015.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.379	a65764a8-9b77-437f-be67-50a8ca20c561	103.246.37.60	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	103.86	28/11/2024, 23:34:06.379	APAC	SEA	PRD	Personal	Intune	4.00:00:00	23	m14psspi0053.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.585	aa6fce97-8119-4f93-8a53-5d1a28ec74a3	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.585	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0638.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.662	78cf9c65-8717-4684-812f-4683ce38039a	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.662	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0129.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.795	337223d1-13e0-41fc-a504-eb17a2455599	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.795	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0664.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.815	e043256a-6338-416b-9d2b-0c3f6918e524	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.815	EMEA	NEU	PRD	MultiSession	Intune	4.00:00:00	15	m01pmsni0016.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:06.852	ed1bbb79-0d6d-4a74-b09c-37e2a784abc9	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:06.852	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0563.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:07.032	cd5d9f99-dac5-410b-aa22-ba17bb7a2d44	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:07.032	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0026.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:07.037	d08b026c-8a7c-44ad-8af7-c1013fb7ffb5	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:07.037	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0568.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:07.107	353734ae-b6cf-43f6-b68c-3422288694f1	148.64.15.38	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:07.107	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0657.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:07.145	408e4998-49e2-4ce0-a170-72a6c1a1ebfd	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:07.145	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0353.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:07.217	4888b063-c87f-420f-993e-871482df7d15	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:07.217	EMEA	NEU	PRD	MultiSession	Intune	4.00:00:00	15	m01pmsni0019.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:07.554	2d9462eb-eca7-49c0-8838-8a8777a4bc28	148.64.15.23	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:07.554	EMEA	NEU	PRD	MultiSession	Intune	4.00:00:00	15	m01pmsni0017.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:08.018	ef1310ae-23f5-4d95-b5f4-5518cf6d9d66	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:08.018	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0021.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:08.226	fd6d3512-948c-41fe-b6c8-baec19125ea5	148.64.15.83	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:08.226	EMEA	NEU	TST	Personal	Intune	4.00:00:00	15	m01tsspi0017.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:08.241	d7968b4e-9520-4a14-b558-26c38606c496	103.246.37.94	Azure Monitor Agent	Windows	Windows 10 Enterprise multi-session	10	0	1.30.0.0	Direct	103.86	28/11/2024, 23:34:08.241	APAC	SEA	UAT	MultiSession	Intune	4.00:00:00	23	m14umsni0001.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:08.248	03bbef68-6e8a-4adf-b8f5-6c0752cd76a3	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:08.248	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0034.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:08.573	dc446104-4fae-4d05-bb1d-8ad3ac9f3ea6	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:08.573	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0357.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:08.981	48da92f5-20ce-40b1-a0d5-b27f95525960	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:08.981	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0377.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:09.390	c8c39bcf-1d5b-4009-84ca-513a7823bc0c	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:09.390	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0665.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:09.766	aa27ee30-f632-40f8-8eb8-08d6ae682c46	148.64.15.63	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:09.766	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0580.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:09.821	6f059104-c9bb-4d39-9550-b3dbc8bf1cd1	148.64.15.9	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:09.821	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0686.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:10.191	13487f86-3062-4105-93a6-0a8099734976	168.149.146.15	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-77.47	28/11/2024, 10:34:10.191	AMRS	EUS2	PRD	Personal	GPO	4.00:00:00	10	m06psspg0055.aberdeen.aberdeen-asset.com
28/11/2024, 15:34:10.386	7ffa73e5-f262-4d6d-9ec9-2c3409c8f893	148.64.15.68	Azure Monitor Agent	Windows	Windows 10 Enterprise	10	0	1.30.0.0	Direct	-6.24	28/11/2024, 15:34:10.386	EMEA	NEU	PRD	Personal	Intune	4.00:00:00	15	m01psspi0028.aberdeen.aberdeen-asset.com



let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "    Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),",  // EMEA (UTC+0)
            "    Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),",  // APAC (UTC+8)
            "    Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated),", // AMRS (UTC-5)
            "    datetime_add('hour', 0, TimeGenerated)",  // Default fallback
            "),",
            "Geo = case(",
            "    Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "    Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "    Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "    'Other'",
            "),",
            "Region = case(",
            "    Computer startswith 'M01', 'NEU',",
            "    Computer startswith 'M04', 'WEU',",
            "    Computer startswith 'M13', 'EAS',",
            "    Computer startswith 'M14', 'SEA',",
            "    Computer startswith 'M06', 'EUS2',",
            "    Computer startswith 'M09', 'CUS',",
            "    'Other'",
            "),",
            "Environment = case(",
            "    substring(Computer, 3, 1) == 'T', 'TST',",
            "    substring(Computer, 3, 1) == 'U', 'UAT',",
            "    substring(Computer, 3, 1) == 'D', 'DEV',",
            "    Computer contains 'NACR', 'CRIMS NonProdA',",
            "    Computer contains 'NBCR', 'CRIMS NonProdB',",
            "    Computer contains 'OHCR', 'OAT CRIMS High',",
            "    Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "    Computer contains 'OLCR', 'OAT CRIMS Low',",
            "    Computer contains 'PHCR', 'PRD CRIMS High',",
            "    Computer contains 'PMCR', 'PRD CRIMS High',",
            "    Computer contains 'PLCR', 'PRD CRIMS Low',",
            "    substring(Computer, 3, 1) == 'P', 'PRD',",
            "    'Other'",
            "),",
            "SessionHostPoolType = case(",
            "    Computer contains 'MSN', 'MultiSession',",
            "    Computer contains 'SSP', 'Personal',",
            "    Computer contains 'NACR', 'MultiSession',",
            "    Computer contains 'NBCR', 'MultiSession',",
            "    Computer contains 'OHCR', 'MultiSession',",
            "    Computer contains 'OMCR', 'MultiSession',",
            "    Computer contains 'OLCR', 'MultiSession',",
            "    Computer contains 'PHCR', 'MultiSession',",
            "    Computer contains 'PMCR', 'MultiSession',",
            "    Computer contains 'PLCR', 'MultiSession',",
            "    Computer contains 'DVLDT', 'Personal',",
            "    'Other'",
            "),",
            "ManagementPlane = case(",
            "    substring(Computer, 7, 1) == 'I', 'Intune',",
            "    substring(Computer, 7, 1) == 'G', 'GPO',",
            "    Computer contains 'DVLDT', 'Intune',",
            "    'Other'",
            "),",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2),",
            "          MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2),",
            "          MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),",
            "          MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source



let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents("https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg", "nmw-app-law-fwjv4wn75m4qg", "let paramRangeStart = todatetime('"", DateTime.ToText(strRangeStart, ""yyyy-MM-ddTHH:mm:ss""), ""');#(lf)let paramRangeEnd = todatetime('"", DateTime.ToText(strRangeEnd, ""yyyy-MM-ddTHH:mm:ss""), ""');#(lf)let binSize = 24h;#(lf)Perf#(lf)| extend #(lf)    LocalTime = case(#(lf)        Computer startswith ""M01"" or Computer startswith ""M04"", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)#(lf)        Computer startswith ""M13"" or Computer startswith ""M14"", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)#(lf)        Computer startswith ""M06"" or Computer startswith ""M09"", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)#(lf)        datetime_add('hour', 0, TimeGenerated) // Default fallback#(lf)    ),#(lf)    Geo = case(#(lf)        Computer startswith ""M01"" or Computer startswith ""M04"", ""EMEA"",#(lf)        Computer startswith ""M13"" or Computer startswith ""M14"", ""APAC"",#(lf)        Computer startswith ""M06"" or Computer startswith ""M09"", ""AMRS"",#(lf)        ""Other""#(lf)    ),#(lf)    Region = case(#(lf)        Computer startswith ""M01"", ""NEU"",#(lf)        Computer startswith ""M04"", ""WEU"",#(lf)        Computer startswith ""M13"", ""EAS"",#(lf)        Computer startswith ""M14"", ""SEA"",#(lf)        Computer startswith ""M06"", ""EUS2"",#(lf)        Computer startswith ""M09"", ""CUS"",#(lf)        ""Other""#(lf)    ), #(lf)    Environment = case(#(lf)        substring(Computer, 3, 1) == ""T"", ""TST"", #(lf)        substring(Computer, 3, 1) == ""U"", ""UAT"", #(lf)        substring(Computer, 3, 1) == ""D"", ""DEV"", #(lf)        Computer contains ""NACR"", ""CRIMS NonProdA"",#(lf)        Computer contains ""NBCR"", ""CRIMS NonProdB"",#(lf)        Computer contains ""OHCR"", ""OAT CRIMS High"",#(lf)        Computer contains ""OMCR"", ""OAT CRIMS Medium"",#(lf)        Computer contains ""OLCR"", ""OAT CRIMS Low"",#(lf)        Computer contains ""PHCR"", ""PRD CRIMS High"",#(lf)        Computer contains ""PMCR"", ""PRD CRIMS High"",#(lf)        Computer contains ""PLCR"", ""PRD CRIMS Low"",#(lf)        substring(Computer, 3, 1) == ""P"", ""PRD"", #(lf)        ""Other""#(lf)    ),#(lf)    SessionHostPoolType = case(#(lf)        Computer contains ""MSN"", ""MultiSession"",#(lf)        Computer contains ""SSP"", ""Personal"",#(lf)        Computer contains ""NACR"", ""MultiSession"",#(lf)        Computer contains ""NBCR"", ""MultiSession"",#(lf)        Computer contains ""OHCR"", ""MultiSession"",#(lf)        Computer contains ""OMCR"", ""MultiSession"",#(lf)        Computer contains ""OLCR"", ""MultiSession"",#(lf)        Computer contains ""PHCR"", ""MultiSession"",#(lf)        Computer contains ""PMCR"", ""MultiSession"",#(lf)        Computer contains ""PLCR"", ""MultiSession"",#(lf)        Computer contains ""DVLDT"", ""Personal"",#(lf)        ""Other""#(lf)    ),#(lf)    ManagementPlane = case(#(lf)        substring(Computer, 7, 1) == ""I"", ""Intune"",#(lf)        substring(Computer, 7, 1) == ""G"", ""GPO"",#(lf)        Computer contains ""DVLDT"", ""Intune"",#(lf)        ""Other""#(lf)    )#(lf)| extend DayOfWeek = dayofweek (LocalTime)#(lf)| extend HourOfDay = hourofday(LocalTime)#(lf)| extend SessionHostName = trim(' ', tolower(Computer))#(lf)| project-away Computer#(lf)| where LocalTime  between (paramRangeStart .. paramRangeEnd)#(lf)| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'#(lf)| where dayofweek(LocalTime) between (1d .. 5d)#(lf)| where hourofday(LocalTime)  between (8 .. 17)#(lf)| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2), #(lf)            MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2), #(lf)            MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),#(lf)            MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),#(lf)            ItemsPerTimeBin = count() // Counting the number of entries per time bin#(lf)  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType#(lf)  | project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin", [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
in
    Source






let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)",
            "        Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)",
            "        Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)",
            "        datetime_add('hour', 0, TimeGenerated) // Default fallback",
            "    ),",
            "    Geo = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "        Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "        Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "        'Other'",
            "    ),",
            "    Region = case(",
            "        Computer startswith 'M01', 'NEU',",
            "        Computer startswith 'M04', 'WEU',",
            "        Computer startswith 'M13', 'EAS',",
            "        Computer startswith 'M14', 'SEA',",
            "        Computer startswith 'M06', 'EUS2',",
            "        Computer startswith 'M09', 'CUS',",
            "        'Other'",
            "    ),",
            "    Environment = case(",
            "        substring(Computer, 3, 1) == 'T', 'TST',",
            "        substring(Computer, 3, 1) == 'U', 'UAT',",
            "        substring(Computer, 3, 1) == 'D', 'DEV',",
            "        Computer contains 'NACR', 'CRIMS NonProdA',",
            "        Computer contains 'NBCR', 'CRIMS NonProdB',",
            "        Computer contains 'OHCR', 'OAT CRIMS High',",
            "        Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "        Computer contains 'OLCR', 'OAT CRIMS Low',",
            "        Computer contains 'PHCR', 'PRD CRIMS High',",
            "        Computer contains 'PMCR', 'PRD CRIMS High',",
            "        Computer contains 'PLCR', 'PRD CRIMS Low',",
            "        substring(Computer, 3, 1) == 'P', 'PRD',",
            "        'Other'",
            "    ),",
            "    SessionHostPoolType = case(",
            "        Computer contains 'MSN', 'MultiSession',",
            "        Computer contains 'SSP', 'Personal',",
            "        Computer contains 'NACR', 'MultiSession',",
            "        Computer contains 'NBCR', 'MultiSession',",
            "        Computer contains 'OHCR', 'MultiSession',",
            "        Computer contains 'OMCR', 'MultiSession',",
            "        Computer contains 'OLCR', 'MultiSession',",
            "        Computer contains 'PHCR', 'MultiSession',",
            "        Computer contains 'PMCR', 'MultiSession',",
            "        Computer contains 'PLCR', 'MultiSession',",
            "        Computer contains 'DVLDT', 'Personal',",
            "        'Other'",
            "    ),",
            "    ManagementPlane = case(",
            "        substring(Computer, 7, 1) == 'I', 'Intune',",
            "        substring(Computer, 7, 1) == 'G', 'GPO',",
            "        Computer contains 'DVLDT', 'Intune',",
            "        'Other'",
            "    )",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2),",
            "          MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2),",
            "          MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),",
            "          MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source








let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
let binSize = 24h;
let timeRangeStart = now(-1d);
let timeRangeEnd = now();
Perf
| extend 
    LocalTime = case(
        Computer startswith "M01" or Computer startswith "M04", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)
        Computer startswith "M13" or Computer startswith "M14", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)
        Computer startswith "M06" or Computer startswith "M09", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)
        datetime_add('hour', 0, TimeGenerated) // Default fallback
    ),
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        Computer contains "NACR", "CRIMS NonProdA",
        Computer contains "NBCR", "CRIMS NonProdB",
        Computer contains "OHCR", "OAT CRIMS High",
        Computer contains "OMCR", "OAT CRIMS Medium",
        Computer contains "OLCR", "OAT CRIMS Low",
        Computer contains "PHCR", "PRD CRIMS High",
        Computer contains "PMCR", "PRD CRIMS High",
        Computer contains "PLCR", "PRD CRIMS Low",
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        Computer contains "NACR", "MultiSession",
        Computer contains "NBCR", "MultiSession",
        Computer contains "OHCR", "MultiSession",
        Computer contains "OMCR", "MultiSession",
        Computer contains "OLCR", "MultiSession",
        Computer contains "PHCR", "MultiSession",
        Computer contains "PMCR", "MultiSession",
        Computer contains "PLCR", "MultiSession",
        Computer contains "DVLDT", "Personal",
        "Other"
    ),
    ManagementPlane = case(
        substring(Computer, 7, 1) == "I", "Intune",
        substring(Computer, 7, 1) == "G", "GPO",
        Computer contains "DVLDT", "Intune",
        "Other"
    )
| extend DayOfWeek = dayofweek (LocalTime)
| extend HourOfDay = hourofday(LocalTime)
| extend SessionHostName = trim(' ', tolower(Computer))
| project-away Computer
| where LocalTime  between (paramRangeStart .. paramRangeEnd)
| where ObjectName == 'Memory' and CounterName == '% Committed Bytes In Use'
| where dayofweek(LocalTime) between (1d .. 5d)
| where hourofday(LocalTime)  between (8 .. 17)
| summarize AVG_RAM_CommittedBytesInUse = round(avg(CounterValue), 2), 
            MAX_RAM_CommittedBytesInUse = round(max(CounterValue), 2), 
            MIN_RAM_CommittedBytesInUse = round(min(CounterValue), 2),
            MED_RAM_CommittedBytesInUse = round(percentile(CounterValue, 50), 2),
            ItemsPerTimeBin = count() // Counting the number of entries per time bin
  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane, SessionHostPoolType
  | project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, Geo, Region, Environment, ManagementPlane, AVG_RAM_CommittedBytesInUse, MAX_RAM_CommittedBytesInUse, MIN_RAM_CommittedBytesInUse, MED_RAM_CommittedBytesInUse, ItemsPerTimeBin
Swap out the KQL below for the one above

let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", 
            DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", 
            DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let binSize = 24h;",
            "Perf",
            "| extend LocalTime = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', datetime_add('hour', 0, TimeGenerated),",
            "        Computer startswith 'M13' or Computer startswith 'M14', datetime_add('hour', 8, TimeGenerated),",
            "        Computer startswith 'M06' or Computer startswith 'M09', datetime_add('hour', -5, TimeGenerated),",
            "        datetime_add('hour', 0, TimeGenerated)",
            "    ),",
            "    Geo = case(",
            "        Computer startswith 'M01' or Computer startswith 'M04', 'EMEA',",
            "        Computer startswith 'M13' or Computer startswith 'M14', 'APAC',",
            "        Computer startswith 'M06' or Computer startswith 'M09', 'AMRS',",
            "        'Other'",
            "    ),",
            "    Region = case(",
            "        Computer startswith 'M01', 'NEU',",
            "        Computer startswith 'M04', 'WEU',",
            "        Computer startswith 'M13', 'EAS',",
            "        Computer startswith 'M14', 'SEA',",
            "        Computer startswith 'M06', 'EUS2',",
            "        Computer startswith 'M09', 'CUS',",
            "        'Other'",
            "    ),",
            "    Environment = case(",
            "        substring(Computer, 3, 1) == 'T', 'TST',",
            "        substring(Computer, 3, 1) == 'U', 'UAT',",
            "        substring(Computer, 3, 1) == 'D', 'DEV',",
            "        Computer contains 'NACR', 'CRIMS NonProdA',",
            "        Computer contains 'NBCR', 'CRIMS NonProdB',",
            "        Computer contains 'OHCR', 'OAT CRIMS High',",
            "        Computer contains 'OMCR', 'OAT CRIMS Medium',",
            "        Computer contains 'OLCR', 'OAT CRIMS Low',",
            "        Computer contains 'PHCR', 'PRD CRIMS High',",
            "        Computer contains 'PMCR', 'PRD CRIMS High',",
            "        Computer contains 'PLCR', 'PRD CRIMS Low',",
            "        substring(Computer, 3, 1) == 'P', 'PRD',",
            "        'Other'",
            "    ),",
            "    SessionHostPoolType = case(",
            "        Computer contains 'MSN', 'MultiSession',",
            "        Computer contains 'SSP', 'Personal',",
            "        Computer contains 'NACR', 'MultiSession',",
            "        Computer contains 'NBCR', 'MultiSession',",
            "        Computer contains 'OHCR', 'MultiSession',",
            "        Computer contains 'OMCR', 'MultiSession',",
            "        Computer contains 'OLCR', 'MultiSession',",
            "        Computer contains 'PHCR', 'MultiSession',",
            "        Computer contains 'PMCR', 'MultiSession',",
            "        Computer contains 'PLCR', 'MultiSession',",
            "        Computer contains 'DVLDT', 'Personal',",
            "        'Other'",
            "    ),",
            "    ManagementPlane = case(",
            "        substring(Computer, 7, 1) == 'I', 'Intune',",
            "        substring(Computer, 7, 1) == 'G', 'GPO',",
            "        Computer contains 'DVLDT', 'Intune',",
            "        'Other'",
            "    )",
            "| extend DayOfWeek = dayofweek(LocalTime)",
            "| extend HourOfDay = hourofday(LocalTime)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| where LocalTime between (paramRangeStart .. paramRangeEnd)",
            "| where ObjectName == 'Processor Information' and CounterName == '% Processor Time'",
            "| where dayofweek(LocalTime) between (1d .. 5d)",
            "| where hourofday(LocalTime) between (8 .. 17)",
            "| summarize AVG_CPU = round(avg(CounterValue), 2),",
            "          MAX_CPU = round(max(CounterValue), 2),",
            "          MIN_CPU = round(min(CounterValue), 2),",
            "          MED_CPU = round(percentile(CounterValue, 50), 2),",
            "          ItemsPerTimeBin = count()",
            "  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, SessionHostPoolType, ManagementPlane",
            "| extend SessionHostKey = substring(SessionHostName, 0, 8)",
            "| project TimeGenerated = BinnedTime, SessionHostName, SessionHostPoolType, SessionHostKey, Geo, Region, Environment, ManagementPlane, AVG_CPU, MAX_CPU, MED_CPU, MIN_CPU, ItemsPerTimeBin"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    )
in
    Source







let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "Perf",
            "| where TimeGenerated between (paramRangeStart..paramRangeEnd)",
            "| extend SessionHostName = trim(' ', tolower(Computer))",
            "| project-away Computer",
            "| summarize arg_max(TimeGenerated, *) by SessionHostName",
            "| extend SessionHostKey = substring(SessionHostName, 0, 8)",
            "| project TimeGenerated, SessionHostName, SessionHostKey"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    ),
    #"Removed Duplicates" = Table.Distinct(Source)
in
    #"Removed Duplicates"


let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
Perf
| where TimeGenerated between (paramRangeStart..paramRangeEnd)
| extend SessionHostName = trim(' ', tolower(Computer))
|project-away Computer
| summarize arg_max(TimeGenerated, *) by SessionHostName
| extend SessionHostKey = substring(SessionHostName, 0, 8)
| project TimeGenerated, SessionHostName, SessionHostKey

replace KQL in M-Query below with KQL above.

let
    // Define start and end date/time parameters
    strRangeStart = RangeStart,
    strRangeEnd = RangeEnd,

    // Connect to Azure Data Explorer and retrieve data with dynamic date range
    Source = AzureDataExplorer.Contents(
        "https://ade.loganalytics.io/subscriptions/58cb357e-51af-4f62-8982-a8c2b9059362/resourcegroups/rg-eus-desktopmanagement-nerdio-weu-prd/providers/microsoft.operationalinsights/workspaces/nmw-app-law-fwjv4wn75m4qg",
        "nmw-app-law-fwjv4wn75m4qg",
        Text.Combine({
            "let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');",
            "let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');",
            "WVDConnections",
            "| where TimeGenerated between (paramRangeStart..paramRangeEnd)",
            "| where SessionHostName != '<>'",
            "| extend HostPoolName = tostring(split(_ResourceId, '/')[-1])",
            "| summarize arg_max(TimeGenerated, *) by SessionHostName",
            "| extend SessionHostName = trim(' ', tolower(SessionHostName))",
            "| project TimeGenerated, SessionHostName, HostPoolName"
        }),
        [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]
    ),
    #"Removed Duplicates" = Table.Distinct(Source)
in
    #"Removed Duplicates"

Working KQL for CPU

let paramRangeStart = todatetime('", DateTime.ToText(strRangeStart, "yyyy-MM-ddTHH:mm:ss"), "');
let paramRangeEnd = todatetime('", DateTime.ToText(strRangeEnd, "yyyy-MM-ddTHH:mm:ss"), "');
let binSize = 24h;
let timeRangeStart = now(-1d);
let timeRangeEnd = now();
Perf
| extend 
    LocalTime = case(
        Computer startswith "M01" or Computer startswith "M04", datetime_add('hour', 0, TimeGenerated),  // EMEA (UTC+0)
        Computer startswith "M13" or Computer startswith "M14", datetime_add('hour', 8, TimeGenerated),  // APAC (UTC+8)
        Computer startswith "M06" or Computer startswith "M09", datetime_add('hour', -5, TimeGenerated), // AMRS (UTC-5)
        datetime_add('hour', 0, TimeGenerated) // Default fallback
    ),
    Geo = case(
        Computer startswith "M01" or Computer startswith "M04", "EMEA",
        Computer startswith "M13" or Computer startswith "M14", "APAC",
        Computer startswith "M06" or Computer startswith "M09", "AMRS",
        "Other"
    ),
    Region = case(
        Computer startswith "M01", "NEU",
        Computer startswith "M04", "WEU",
        Computer startswith "M13", "EAS",
        Computer startswith "M14", "SEA",
        Computer startswith "M06", "EUS2",
        Computer startswith "M09", "CUS",
        "Other"
    ), 
    Environment = case(
        substring(Computer, 3, 1) == "T", "TST", 
        substring(Computer, 3, 1) == "U", "UAT", 
        substring(Computer, 3, 1) == "D", "DEV", 
        Computer contains "NACR", "CRIMS NonProdA",
        Computer contains "NBCR", "CRIMS NonProdB",
        Computer contains "OHCR", "OAT CRIMS High",
        Computer contains "OMCR", "OAT CRIMS Medium",
        Computer contains "OLCR", "OAT CRIMS Low",
        Computer contains "PHCR", "PRD CRIMS High",
        Computer contains "PMCR", "PRD CRIMS High",
        Computer contains "PLCR", "PRD CRIMS Low",
        substring(Computer, 3, 1) == "P", "PRD", 
        "Other"
    ),
    SessionHostPoolType = case(
        Computer contains "MSN", "MultiSession",
        Computer contains "SSP", "Personal",
        Computer contains "NACR", "MultiSession",
        Computer contains "NBCR", "MultiSession",
        Computer contains "OHCR", "MultiSession",
        Computer contains "OMCR", "MultiSession",
        Computer contains "OLCR", "MultiSession",
        Computer contains "PHCR", "MultiSession",
        Computer contains "PMCR", "MultiSession",
        Computer contains "PLCR", "MultiSession",
        Computer contains "DVLDT", "Personal",
        "Other"
    ),
    ManagementPlane = case(
        substring(Computer, 7, 1) == "I", "Intune",
        substring(Computer, 7, 1) == "G", "GPO",
        Computer contains "DVLDT", "Intune",
        "Other"
    )
| extend DayOfWeek = dayofweek (LocalTime)
| extend HourOfDay = hourofday(LocalTime)
| extend SessionHostName = trim(' ', tolower(Computer))
| project-away Computer
| where LocalTime  between (paramRangeStart .. paramRangeEnd)
| where ObjectName == "Processor Information" and CounterName == "% Processor Time"
| where dayofweek(LocalTime) between (1d .. 5d)
| where hourofday(LocalTime)  between (8 .. 17)
| summarize AVG_CPU = round(avg(CounterValue), 2), 
            MAX_CPU = round(max(CounterValue), 2), 
            MIN_CPU = round(min(CounterValue), 2),
            MED_CPU = round(percentile(CounterValue, 50), 2),
            ItemsPerTimeBin = count() // Counting the number of entries per time bin
  by BinnedTime = bin(LocalTime, binSize), SessionHostName, Geo, Region, Environment, ManagementPlane
  | project TimeGenerated = BinnedTime, SessionHostName, Geo, Region, Environment, ManagementPlane, AVG_CPU, MAX_CPU, MED_CPU, MIN_CPU, ItemsPerTimeBin
